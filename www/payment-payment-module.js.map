{"version":3,"sources":["webpack:///./src/app/payment/payment.module.ts","webpack:///./src/app/payment/payment.page.html","webpack:///./src/app/payment/payment.page.scss","webpack:///./src/app/payment/payment.page.ts"],"names":[],"mappings":"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","file":"payment-payment-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentPage } from './payment.page';\nimport { IonicModule } from '@ionic/angular';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaymentPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PaymentPage]\n})\nexport class PaymentPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button defaultHref=\\\"/tabs/tab3\\\" routerDirection='back'></ion-back-button>\\n        </ion-buttons>\\n    <ion-title>Payment</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- <ion-content> -->\\n  <!-- <ion-grid *ngFor='let product of returnCart; let i = index'> \\n      <ion-row>\\n        <ion-text>\\n          {{ product.name }}\\n        {{ product.price }}\\n        </ion-text>\\n      </ion-row>\\n  <br> -->\\n<!-- \\n  <div *ngIf='returnCart.length > 0'> -->\\n      <!-- <div id=\\\"paypal-button-container\\\"></div> -->\\n    <!-- <ion-button name='close' (click)='pay(product, i)'>PAY</ion-button> -->\\n\\n    <!-- <img (click)='pay(product, i)' class='paypalBtn' src=\\\"https://www.paypalobjects.com/digitalassets/c/website/marketing/apac/C2/logos-buttons/optimize/Full_Online_Tray_RGB.png\\\" border=\\\"0\\\" alt=\\\"PayPal Acceptance Mark\\\">\\n  </div>\\n\\n  </ion-grid> -->\\n\\n<!-- </ion-content> -->\\n\\n\\n<!-- test -->\\n\\n<ion-content>\\n  <ion-card class='noBorder'>\\n    <ion-card-content>\\n\\n        <div class='center'>\\n            <ion-text *ngFor='let product of returnCart; let i = index'>\\n                <h1>  {{ product.product_name }}\\n                    ${{ product.price }}</h1>\\n              </ion-text>\\n              <ion-button color='primary' (click)='getTotal()'>Calculate Total</ion-button>\\n             \\n          </div>\\n  \\n         <div id='demo'></div>\\n\\n         <br>\\n  <ion-text>\\n    Select Payment Method:\\n  </ion-text>\\n\\n    \\n    <ion-segment [(ngModel)]=\\\"galleryType\\\" color=\\\"secondary\\\" mode='md'>\\n\\n        <ion-segment-button value=\\\"pinterest\\\" mode='md'>\\n            <img src='assets/apple-pay.svg'>\\n          </ion-segment-button>\\n  \\n\\n\\n      <ion-segment-button value=\\\"master\\\" mode='md'>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                  <img src='assets/mc.svg'>\\n              </ion-col>\\n\\n              <ion-col>\\n                  <img src='assets/visa.svg'>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n      </ion-segment-button>\\n\\n      <ion-segment-button value=\\\"regular\\\" mode='md'>\\n          <img src='assets/PayPal_logo.svg'>\\n      </ion-segment-button>\\n      <br>\\n\\n        \\n    </ion-segment>\\n  \\n    <div [ngSwitch]=\\\"galleryType\\\">\\n\\n        <div class=\\\"images\\\" *ngSwitchCase=\\\"'regular'\\\">\\n            <ion-grid *ngFor='let product of returnCart; let i = index'> \\n                <!-- <ion-row>\\n                  <ion-text>\\n                    {{ product.name }}\\n                  {{ product.price }}\\n                  </ion-text>\\n                </ion-row> -->\\n            <br>\\n          \\n            <div *ngIf='returnCart.length > 0'>\\n                <!-- <div id=\\\"paypal-button-container\\\"></div> -->\\n              <!-- <ion-button name='close' (click)='pay(product, i)'>PAY</ion-button> -->\\n          \\n              <img (click)='pay(product, i)' class='paypalBtn' src=\\\"assets/PayPal_logo.svg\\\" alt=\\\"PayPal Acceptance Mark\\\">\\n            </div>\\n          \\n            </ion-grid>\\n        </div>\\n\\n        <div class=\\\"images\\\" *ngSwitchCase=\\\"'pinterest'\\\">\\n          Applepay here\\n          </div>\\n\\n          <div class=\\\"images\\\" *ngSwitchCase=\\\"'master'\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Name on card</ion-label>\\n              <ion-input></ion-input>\\n            </ion-item>\\n\\n            <ion-item>\\n                <ion-label position=\\\"floating\\\">Card number</ion-label>\\n                <ion-input></ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                  <ion-label position=\\\"floating\\\">Expiry date (MM/YY)</ion-label>\\n                  <ion-input></ion-input>\\n                </ion-item>\\n\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">Security code</ion-label>\\n                    <ion-input></ion-input>\\n                  </ion-item>\\n          </div>\\n\\n      </div>\\n\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-content>\"","module.exports = \"ion-button {\\n  --border-radius: 0 !important;\\n  width: 100%; }\\n\\n.noBorder {\\n  box-shadow: none;\\n  border-radius: 0;\\n  text-align: center;\\n  color: black; }\\n\\n.noBorder {\\n  box-shadow: none; }\\n\\n.sc-ion-card-ios-h {\\n  margin-left: 0;\\n  margin-right: 0;\\n  -webkit-margin-start: 0; }\\n\\n.mypaypal {\\n  text-align: center; }\\n\\nion-button {\\n  --background: #ffc438;\\n  --color-selected:#ffc438;\\n  --background-focused: #ffc438;\\n  --background-activated: #ffc438; }\\n\\n.center {\\n  text-align: center;\\n  padding: 1em; }\\n\\nion-text {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.paypalBtn {\\n  width: 50%;\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9nYW4vRGVza3RvcC9GWVAvc2F5b2NvZGUtZWNvbW1lcmNlLXRlbXBsYXRlL3NyYy90aGVtZS9fYnV0dG9uU3R5bGUuc2NzcyIsIi9Vc2Vycy9nYW4vRGVza3RvcC9GWVAvc2F5b2NvZGUtZWNvbW1lcmNlLXRlbXBsYXRlL3NyYy90aGVtZS9fbm9Cb3JkZXItcHJvZHVjdC5zY3NzIiwiL1VzZXJzL2dhbi9EZXNrdG9wL0ZZUC9zYXlvY29kZS1lY29tbWVyY2UtdGVtcGxhdGUvc3JjL3RoZW1lL19ub0JvcmRlci1jYXJkLnNjc3MiLCIvVXNlcnMvZ2FuL0Rlc2t0b3AvRllQL3NheW9jb2RlLWVjb21tZXJjZS10ZW1wbGF0ZS9zcmMvYXBwL3BheW1lbnQvcGF5bWVudC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw2QkFBZ0I7RUFDaEIsV0FBVyxFQUFBOztBQ0ZmO0VBQ0ksZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsWUFBWSxFQUFBOztBQ0poQjtFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGNBQWM7RUFDZCxlQUFlO0VBQ2YsdUJBQXVCLEVBQUE7O0FDSDNCO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0kscUJBQWE7RUFDYix3QkFBaUI7RUFDakIsNkJBQXFCO0VBQ3JCLCtCQUF1QixFQUFBOztBQUczQjtFQUNJLGtCQUFrQjtFQUNsQixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksY0FBYztFQUNkLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxVQUFVO0VBQ1YsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQvcGF5bWVudC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tYnV0dG9uIHtcbiAgICAtLWJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICB3aWR0aDogMTAwJTtcbn0iLCIubm9Cb3JkZXIge1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6IGJsYWNrO1xufSIsIi5ub0JvcmRlciB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbn1cblxuLnNjLWlvbi1jYXJkLWlvcy1oIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDA7XG59IiwiQGltcG9ydCAnLi4vLi4vdGhlbWUvX2J1dHRvblN0eWxlJztcbkBpbXBvcnQgJy4uLy4uL3RoZW1lL19ub0JvcmRlci1wcm9kdWN0JztcbkBpbXBvcnQgJy4uLy4uL3RoZW1lL25vQm9yZGVyLWNhcmQnO1xuXG4ubXlwYXlwYWwge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW9uLWJ1dHRvbiB7XG4gICAgLS1iYWNrZ3JvdW5kOiAjZmZjNDM4O1xuICAgIC0tY29sb3Itc2VsZWN0ZWQ6I2ZmYzQzODtcbiAgICAtLWJhY2tncm91bmQtZm9jdXNlZDogI2ZmYzQzODs7XG4gICAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogI2ZmYzQzODtcbn0gXG5cbi5jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxZW07XG59XG5cbmlvbi10ZXh0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5wYXlwYWxCdG4ge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufSJdfQ== */\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { ServiceCartService } from '../service-cart.service';\nimport { Router } from '@angular/router';\nimport { Dialogs } from '@ionic-native/dialogs/ngx';\nimport { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\n\ndeclare let paypal: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.page.html',\n  styleUrls: ['./payment.page.scss'],\n})\n\nexport class PaymentPage implements OnInit {\n\n  constructor(private cartService: ServiceCartService,\n              private router: Router, \n              private dialogs: Dialogs,\n              private payPal: PayPal,\n              ) { }\n\n  returnCart = [];\n  updatedProductArr = [];\n  \n  ngOnInit() {\n    this.returnCart = this.cartService.getCart();\n    this.updatedProductArr = this.cartService.getProducts(); // Updated Arr List\n    \n  }\n\n  // addScript: boolean = false;\n  // paypalLoad: boolean = true;\n  \n  finalAmount: number;\n\n  // paypalConfig = {\n  //   env: 'sandbox',\n  //   client: {\n  //     sandbox: 'AU1nnVbRvqQNVEmq0-LqzzI_Co9w-7mPvYu4htV8GjET7ieaBkUaK5IFPI5PNQ4QittVSavsjxcTNBrk'\n  //   },\n  //   commit: true,\n  //   payment: (data, actions) => {\n  //     return actions.payment.create({\n  //       payment: {\n  //         transactions: [\n  //           { amount: { total: this.finalAmount, currency: 'SGD' } }\n  //         ]\n  //       }\n  //     });\n  //   },\n  //   onAuthorize: (data, actions) => {\n  //     return actions.payment.execute().then((payment) => {\n  //       // Do something when payment is successful.\n  //       this.router.navigate(['/tabs/confirmation-page']);\n  //     })\n  //   }\n  // };\n\n\n  // ngAfterViewChecked(): void {\n  //   if (!this.addScript) {\n  //     this.addPaypalScript().then(() => {\n  //       paypal.Button.render(this.paypalConfig, '#paypal-button-container');\n  //       this.paypalLoad = false;\n  //     })\n  //   }\n  // }\n  \n  // addPaypalScript() {\n  //   this.addScript = true;\n  //   return new Promise((resolve, reject) => {\n  //     let scripttagElement = document.createElement('script'); \n  //     scripttagElement.src = 'https://www.paypalobjects.com/api/checkout.js';\n  //     scripttagElement.onload = resolve;\n  //     document.body.appendChild(scripttagElement);\n  //   })\n  // }\n\n  // finalTotal = 0;\n  // getTotal() {\n  //   for (var i = 0; i < this.returnCart.length; i++) {\n  //     this.finalTotal += this.returnCart[i].price; // Total Amount\n  //   }\n  //   alert(this.finalTotal);\n  // }\n\n  total = 0;\n  totalString: any;\n\n  finalAmt = 0;\n\n  getTotal() {\n    \n    this.finalAmt = 0;\n    for (var i = 0; i < this.returnCart.length; i++) {\n        this.finalAmt += this.returnCart[i].price; // Total Amount\n    }\n    document.getElementById(\"demo\").innerHTML = 'Total Cost $' + this.finalAmt\n  }\n\n  pay(product) {\n\n    this.total = 0;\n    for (var i = 0; i < this.returnCart.length; i++) {\n        this.total += this.returnCart[i].price; // Total Amount\n        this.totalString = this.total.toString();\n    }\n\n    this.payPal.init({\n      PayPalEnvironmentProduction: 'YOUR_PRODUCTION_CLIENT_ID',\n      PayPalEnvironmentSandbox: 'AU1nnVbRvqQNVEmq0-LqzzI_Co9w-7mPvYu4htV8GjET7ieaBkUaK5IFPI5PNQ4QittVSavsjxcTNBrk'\n    }).then(() => {\n      // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n      this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n        // Only needed if you get an \"Internal Service Error\" after PayPal login!\n        //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n      })).then(() => {\n        let payment = new PayPalPayment(this.totalString, 'SGD', 'Total', 'sale');\n        \n        this.payPal.renderSinglePaymentUI(payment).then(() => {\n          // Successfully paid\n          this.returnCart.splice(product)\n          this.dialogs.alert('Your order has been confirmed!')\n            .then(() => {\n              console.log('Errors dismissed')\n              this.router.navigate(['/tabs/tab1'])\n            }).catch(e => console.log('Error displaying dialog', e));\n          // this.router.navigate(['/tabs/tab1'])\n\n          // Example sandbox response\n          //\n          // {\n          //   \"client\": {\n          //     \"environment\": \"sandbox\",\n          //     \"product_name\": \"PayPal iOS SDK\",\n          //     \"paypal_sdk_version\": \"2.16.0\",\n          //     \"platform\": \"iOS\"\n          //   },\n          //   \"response_type\": \"payment\",\n          //   \"response\": {\n          //     \"id\": \"PAY-1AB23456CD789012EF34GHIJ\",\n          //     \"state\": \"approved\",\n          //     \"create_time\": \"2016-10-03T13:33:33Z\",\n          //     \"intent\": \"sale\"\n          //   }\n          // }\n        }, () => {\n          // Error or render dialog closed without being successful\n        });\n      }, () => {\n        // Error in configuration\n      });\n    }, () => {\n      // Error in initialization, maybe PayPal isn't supported or something else\n    });\n\n  }\n}\n"],"sourceRoot":""}